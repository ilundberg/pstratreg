[{"path":"index.html","id":"welcome","chapter":"Welcome!","heading":"Welcome!","text":"WARNING. website documents R package development. Expect changes. encourage try package email us suggestions.1This website documents pstratreg package R. package helps study causal effects treatment values cause outcomes non-existent units.Possible applications includea labor market intervention outcome hourly wage, people unemployeda medical intervention outcome health metric, people die measureda sociological study outcome involves one’s spouse, people divorce never marry thus spouseThis package provides regression-based methods principal stratification rely parametric models useful settings one hopes adjust many confounders.","code":""},{"path":"index.html","id":"getting-started","chapter":"Welcome!","heading":"Getting started","text":"get started, first install R RStudio. install package.Now head next page see types questions package can help answer.project joint work Ian Lundberg (Cornell, ilundberg@cornell.edu) Soonhong Cho (UCLA, soonhongcho@g.ucla.edu).","code":"\ndevtools::install_github(\"ilundberg/pstratreg\")"},{"path":"the-goal.html","id":"the-goal","chapter":"1 The goal","heading":"1 The goal","text":"Average causal effects undefined outcomes exist. example, consider two people eligible job training intervention.social scientist might study average causal effect intervention future hourly wages. without job training, William employed . wage ?? exist. result, average causal effect exist. Principal stratification method estimate average causal effects subpopulation excludes people like William, effect undefined.read . original ideas, see Frangakis & Rubin (2002) Zhang & Rubin (2003). recent introduction, see Miratrix et al. (2018).page tutorial ideas behind principal stratification. next page discusses regression setting focus package. Subsequent pages show package functionality.","code":""},{"path":"the-goal.html","id":"defining-principal-strata","chapter":"1 The goal","heading":"1.1 Defining principal strata","text":"Let \\(M_i\\) binary mediator (e.g., employment) determines whether outcome exists unti \\(\\). Let \\(Y_i\\) outcome, \\(Y\\) undefined \\(M = 0\\). Let \\(\\{M_i^1,M_i^0\\}\\) \\(\\{Y_i^1,Y_i^0\\}\\) potential values mediator outcome take unit \\(\\) job training job training. table gave values \\(\\{Y_i^1,Y_i^0\\}\\).Define four principal strata units effect intervention mediator valueIn example, Javier member always stratum William member induced stratum.","code":""},{"path":"the-goal.html","id":"target-population-the-always-stratum","chapter":"1 The goal","heading":"1.2 Target population: The always stratum","text":"average causal effect \\(E(Y^1 - Y^0)\\) defined “Always” stratum.induced stratum, \\(Y^0\\) undefined, effect \\(Y^1 - ??\\)blocked stratum, \\(Y^1\\) undefined, effect \\(?? - Y^0\\)never stratum, undefined, effect \\(?? - ??\\)causal estimand therefore average causal effect always stratum.\\[E(Y^1 - Y^0 \\mid S = \\text{Always})\\]","code":""},{"path":"the-goal.html","id":"fundamental-problem-strata-are-latent","chapter":"1 The goal","heading":"1.3 Fundamental problem: Strata are latent","text":"Suppose William received job training. observe $26 wage. know employed without job training. William received job training, observed data know either always stratum induced stratum.can observed treatment value \\(D_i\\) mediator value \\(M_i\\). combination values mixture two principal strata.","code":""},{"path":"the-goal.html","id":"solution-step-1-make-an-assumption","chapter":"1 The goal","heading":"1.4 Solution step 1: Make an assumption","text":"Assumptions can simplify problem, can plausible settings. focus two versions one assumption.example, positive monotonicity assumption may credible: job training unlikely block anyone employment. settings, negative monotonicity assumption credible. treatment criminal record one’s resume, treatment might block employment unlikely induce employment.positive monotonicity, latent strata become observable.example, suppose Javier assigned job training, observed employed. positive monotonicity, know Javier always stratum employed without job training, thus surely employed job training.","code":""},{"path":"the-goal.html","id":"solution-step-2-bound-the-average-effect-in-the-always-stratum","chapter":"1 The goal","heading":"1.5 Solution step 2: Bound the average effect in the always stratum","text":"Suppose assume positive monotonicity, observe data four people randomized treatment condition.-job-training condition, observe following four peopleThe stratum column sometimes known assumption: Jamal Sandra employed despite job training, surely employed counterfactual world job training (positive monotonicity). Oscar Nancy might might employed counterfactual world received job training.Four people randomized treatment: job trainingThe stratum column four treated people always unknown, positive monotonicity might might employed despite job training.comparing frequency ?? tables, can estimate job training reduces employment 50 percentage points. tells us size induced stratum.\\[\\hat{P}(S = \\text{Induced}) = 0.5\\]receiving job training employed, data also suggest never-employed stratum empty.\\[\\hat{P}(S = \\text{Never}) = 0\\]Thus, example estimate 50% people always employed 50% induced employment exposed job training. Thus half {Nia, Steven, Maya, Hugo} always-employed.half? impossible know. therefore bound expected outcome treatment.upper bound, assume highest-valued half treated units always-employed ones\nNia Steven always employed\nMaya Hugo induced\n\\(\\hat{E}_\\text{Upper}(Y^1\\mid S = \\text{Always}) = \\frac{32+40}{2} = \\$36\\)\nNia Steven always employedMaya Hugo induced\\(\\hat{E}_\\text{Upper}(Y^1\\mid S = \\text{Always}) = \\frac{32+40}{2} = \\$36\\)lower bound, assume lowest-valued half treated units always-employed ones\nNia Steven induced\nMaya Hugo always employed\n\\(\\hat{E}_\\text{Lower}(Y^1\\mid S = \\text{Always}) = \\frac{25+29}{2} = \\$27\\)\nNia Steven inducedMaya Hugo always employed\\(\\hat{E}_\\text{Lower}(Y^1\\mid S = \\text{Always}) = \\frac{25+29}{2} = \\$27\\)positive monotonicity untreated individuals must always-employed, point estimate outcome control\\[\\hat{E}(Y^0\\mid S = \\text{Always}) = \\$18\\]difference tells us average causal effect job training wages always employed $27 - $18 = $9 $36 - $18 = $18.","code":""},{"path":"why-regression.html","id":"why-regression","chapter":"2 Why regression","heading":"2 Why regression","text":"goal package support parametric model-based principal stratification. page motivates choice: want model?Parametric regression models make principal stratification bounds applicable social science settings many covariates. One setting causal inference observational settings. setting, might want statistically adjust covariate vector \\(\\vec{X}\\).\\(\\vec{X}\\) can take discrete values, one can carry principal stratification within stratum \\(\\vec{X}\\)\\(\\vec{X}\\) can take many values, possible vector value \\(\\vec{X}_i\\) uniqueIn latter case, need model-based principal stratification.Model mediator\nFit model mediator \\(M\\)\nEstimate probability stratum unit\nFit model mediator \\(M\\)Estimate probability stratum unitModel outcome\nFit model outcome \\(Y\\mid = 1, M = 1, \\vec{X}\\)\nExample: Model distribution wages employed job training recipients\n\nFit model outcome \\(Y\\mid = 0, M = 1, \\vec{X}\\)\nExample: Model distribution wages employed job training recipients\n\nBound assuming proportion induced (1) upper lower portion conditional covariates\nFit model outcome \\(Y\\mid = 1, M = 1, \\vec{X}\\)\nExample: Model distribution wages employed job training recipients\nExample: Model distribution wages employed job training recipientsFit model outcome \\(Y\\mid = 0, M = 1, \\vec{X}\\)\nExample: Model distribution wages employed job training recipients\nExample: Model distribution wages employed job training recipientsBound assuming proportion induced (1) upper lower portion conditional covariates","code":""},{"path":"why-regression.html","id":"upper-bound-left---right","chapter":"2 Why regression","heading":"2.0.1 Upper bound: Left - Right","text":"","code":""},{"path":"why-regression.html","id":"lower-bound-left---right","chapter":"2 Why regression","heading":"2.0.2 Lower bound: Left - Right","text":"","code":""},{"path":"basic-functionality.html","id":"basic-functionality","chapter":"3 Basic functionality","heading":"3 Basic functionality","text":"page illustrates basic functionality pstratreg function. function conducts parametric principal stratification analysis estimate average causal effect among always-valid subgroup whose outcome exist either treatment condition.Jargon? Start first page goal!package automates process toestimate mediator modelestimate outcome model\nallowing heteroskedasticity needed\nallowing heteroskedasticity neededcalculate conditional probability always-validimplement monotonicity assumptionsbound estimates using conditional outcome distribution proportion always-valid subgroupreturn estimates, conditional population subgroups requested","code":""},{"path":"basic-functionality.html","id":"simulate-data","chapter":"3 Basic functionality","heading":"3.1 Simulate data","text":"first simulate data illustration.data four variablescontinuous confounder xbinary treatment abinary mediator mcontinuous outcome y\ny NA m = FALSE\ny NA m = FALSE","code":"\nlibrary(tidyverse)\nlibrary(pstratreg)\ndata <- pstratreg_sim(n = 100)#>            x     a     m         y\n#> 1  0.3242856  TRUE  TRUE  1.857489\n#> 2  1.1361284 FALSE  TRUE  1.332787\n#> 3 -0.3803315  TRUE FALSE        NA\n#> 4 -0.8654735 FALSE  TRUE -1.731737\n#> 5 -2.2129457 FALSE  TRUE -1.913661"},{"path":"basic-functionality.html","id":"the-pstratreg-function","chapter":"3 Basic functionality","heading":"3.2 The pstratreg function","text":"call runs principal stratification regression analysis default options, returning estimates average treatment effect among latent stratum valid outcomes regardless treatment.","code":"\nresult <- pstratreg(\n  formula_y = formula(y ~ x*a),\n  formula_m = formula(m ~ x*a),\n  data = data,\n  treatment_name = \"a\"\n)#> Effect on mediator, where mediator indicates whether outcome will be valid\n#> # A tibble: 1 × 3\n#>   mhat1 mhat0 effect_m\n#>   <dbl> <dbl>    <dbl>\n#> 1 0.724 0.649   0.0754\n#> \n#> Effect on outcome among those who would have a valid outcome regardless of treatment\n#> # A tibble: 1 × 3\n#>   effect_y_lower effect_y_naive effect_y_upper\n#>            <dbl>          <dbl>          <dbl>\n#> 1          0.472           1.21           1.95"},{"path":"basic-functionality.html","id":"positive-monotonicity","chapter":"3 Basic functionality","heading":"3.3 Positive monotonicity","text":"believe TRUE value treatment never causes outcome undefined, might add monotonicity_positive = TRUE option.Sometimes, monotonicity assumption disagrees empirical estimates least cases. example, assume treatment never prevents valid outcome empirically estimate treatment increases probability treatment increases value mediator subgroups. happens, package issues warning.Empirical monotonicity violations may non-troubling; can occur estimates due random chance sampling variability. user assumed monotonicity, package assumes violations arise purely estimation errors. predicted values mediator treatment condition cases forced equal, midpoint two predicted values.Generally, warning tells monotonicity violated small percent cases, may warranted proceed. monotonicity empirically violated many cases, may need rethink assumption.","code":"\nresult <- pstratreg(\n  formula_y = formula(y ~ x*a),\n  formula_m = formula(m ~ x*a),\n  data = data,\n  treatment_name = \"a\",\n  monotonicity_positive = TRUE\n)\n#> Warning in pstratreg(formula_y = formula(y ~ x * a), formula_m = formula(m ~ : Monotonicity violated in 13 % of cases\n#> Forcing mhat1_trunc = mhat0_trunc at midpoint of estimates for those#> Effect on mediator, where mediator indicates whether outcome will be valid\n#> # A tibble: 1 × 3\n#>   mhat1 mhat0 effect_m\n#>   <dbl> <dbl>    <dbl>\n#> 1 0.724 0.649   0.0754\n#> \n#> Effect on outcome among those who would have a valid outcome regardless of treatment\n#> # A tibble: 1 × 3\n#>   effect_y_lower effect_y_naive effect_y_upper\n#>            <dbl>          <dbl>          <dbl>\n#> 1           1.01           1.21           1.41"},{"path":"basic-functionality.html","id":"negative-monotonicity","chapter":"3 Basic functionality","heading":"3.4 Negative monotonicity","text":"Conversely, can assume negative monotonicity monotonicity_negative = TRUE. sure negative monotonicity , see previous page big idea!particular simulation, negative monotonicity hold see warning appropriately alerts us monotonicity frequently empirically violated.","code":"\nresult <- pstratreg(\n  formula_y = formula(y ~ x*a),\n  formula_m = formula(m ~ x*a),\n  data = data,\n  treatment_name = \"a\",\n  monotonicity_negative = TRUE\n)\n#> Warning in pstratreg(formula_y = formula(y ~ x * a), formula_m = formula(m ~ : Monotonicity violated in 87 % of cases\n#> Forcing mhat1_trunc = mhat0_trunc at midpoint of estimates for those\n#> Warning in pstratreg(formula_y = formula(y ~ x * a),\n#> formula_m = formula(m ~ : Recoding 13 % of p_s to sum to 1#> Effect on mediator, where mediator indicates whether outcome will be valid\n#> # A tibble: 1 × 3\n#>   mhat1 mhat0 effect_m\n#>   <dbl> <dbl>    <dbl>\n#> 1 0.724 0.649   0.0754\n#> \n#> Effect on outcome among those who would have a valid outcome regardless of treatment\n#> # A tibble: 1 × 3\n#>   effect_y_lower effect_y_naive effect_y_upper\n#>            <dbl>          <dbl>          <dbl>\n#> 1           1.20           1.21           1.22"},{"path":"basic-functionality.html","id":"aggregate-in-subgroups","chapter":"3 Basic functionality","heading":"3.5 Aggregate in subgroups","text":"Instead sample average effect estimates, might want estimate within subgroups defined grouping variable data. group_vars argument allows specify vector variable names data within aggregate results.First create groups illustrationand apply function estimate within groups.","code":"\ndata_with_groups <- data %>%\n  mutate(group1 = x < -.5,\n         group2 = x > .5)#>             x     a     m          y group1 group2\n#> 1  0.32428562  TRUE  TRUE  1.8574886  FALSE  FALSE\n#> 2  1.13612842 FALSE  TRUE  1.3327867  FALSE   TRUE\n#> 3 -0.38033153  TRUE FALSE         NA  FALSE  FALSE\n#> 4 -0.86547350 FALSE  TRUE -1.7317371   TRUE  FALSE\n#> 5 -2.21294568 FALSE  TRUE -1.9136614   TRUE  FALSE\n#> 6 -0.08895808 FALSE  TRUE -0.4130438  FALSE  FALSE\nresult <- pstratreg(\n  formula_y = formula(y ~ x*a),\n  formula_m = formula(m ~ x*a),\n  data = data_with_groups,\n  treatment_name = \"a\",\n  group_vars = c(\"group1\",\"group2\")\n)#> Effect on mediator, where mediator indicates whether outcome will be valid\n#> # A tibble: 3 × 5\n#>   group1 group2 mhat1 mhat0 effect_m\n#>   <lgl>  <lgl>  <dbl> <dbl>    <dbl>\n#> 1 FALSE  FALSE  0.826 0.712   0.114 \n#> 2 FALSE  TRUE   0.941 0.842   0.0989\n#> 3 TRUE   FALSE  0.483 0.461   0.0222\n#> \n#> Effect on outcome among those who would have a valid outcome regardless of treatment\n#> # A tibble: 3 × 5\n#>   group1 group2 effect_y_lower effect_y_naive effect_y_upper\n#>   <lgl>  <lgl>           <dbl>          <dbl>          <dbl>\n#> 1 FALSE  FALSE           0.458           1.21           1.96\n#> 2 FALSE  TRUE            0.841           1.24           1.63\n#> 3 TRUE   FALSE          -0.314           1.17           2.66"},{"path":"basic-functionality.html","id":"sample-weights","chapter":"3 Basic functionality","heading":"3.6 Sample weights","text":"case weights sampling unequal probabilities, can provided vector length nrow(data) using weights argument.generate hypothetical weightsand call function. Note glm() used internally estimate logistic regression create warning non-integer #successes binomial glm! expected weights used function.","code":"\nsim_weights <- runif(nrow(data))\nresult <- pstratreg(\n  formula_y = formula(y ~ x*a),\n  formula_m = formula(m ~ x*a),\n  data = data,\n  treatment_name = \"a\",\n  weights = sim_weights\n)\n#> Warning in eval(family$initialize): non-integer #successes\n#> in a binomial glm!#> Effect on mediator, where mediator indicates whether outcome will be valid\n#> # A tibble: 1 × 3\n#>   mhat1 mhat0 effect_m\n#>   <dbl> <dbl>    <dbl>\n#> 1 0.737 0.624    0.113\n#> \n#> Effect on outcome among those who would have a valid outcome regardless of treatment\n#> # A tibble: 1 × 3\n#>   effect_y_lower effect_y_naive effect_y_upper\n#>            <dbl>          <dbl>          <dbl>\n#> 1          0.421           1.21           2.00"},{"path":"relaxing-homoskedasticity.html","id":"relaxing-homoskedasticity","chapter":"4 Relaxing homoskedasticity","heading":"4 Relaxing homoskedasticity","text":"Model-based principal stratification bounds involve model conditional distribution outcome, just conditional mean. goal, one might concerned homoskedasticity assumption.Homoskedasticity: assumption conditional outcome variance equal values predictors.commonly assumed Ordinary Least Squares, homoskedasticity assumption can relaxed. currently support parametric model heteroskedasticity based ideas variance function regression (Western & Bloome 2009).","code":""},{"path":"relaxing-homoskedasticity.html","id":"model-the-conditional-mean","chapter":"4 Relaxing homoskedasticity","heading":"4.1 Model the conditional mean","text":"begin ordinary least squares outcome model, homoskedastic case,\\[\\begin{aligned}\n\\hat{E}(Y\\mid \\vec{X},,M = 1) = \\hat\\alpha + \\hat\\beta  + \\vec{X}'\\hat{\\vec\\gamma} + \\vec{X}'\\hat{\\vec\\eta}\n\\end{aligned}\\]\\(\\) binary treatment, \\(\\vec{X}\\) vector measured confounders, \\(M = 1\\) mediator indicating outcome valid. Let \\(\\hat{Y}_i\\) predicted value unit \\(\\) model.","code":""},{"path":"relaxing-homoskedasticity.html","id":"model-the-conditional-variance","chapter":"4 Relaxing homoskedasticity","heading":"4.2 Model the conditional variance","text":"unit, calculate squared residual, can conceptualize unit-specific contribution log conditional variance.\\[\\hat\\epsilon_i^2 = \\left(Y_i - \\hat{Y}_i\\right)^2\\]relax homoskedasticity, estimate second model log squared residuals, log used ensure unbounded scale.\\[\\begin{aligned}\n\\hat{E}(\\log(\\hat\\epsilon_i^2)\\mid \\vec{X},,M = 1) = \\hat\\lambda + \\hat\\delta  + \\vec{X}'\\hat{\\vec\\nu} + \\vec{X}'\\hat{\\vec\\eta}\n\\end{aligned}\\]Predictions model (exponentiated) estimates conditional variance, \\(\\hat{V}(Y\\mid \\vec{X},,M=1)\\) observed predictors unit. make predictions treatment control conditions.\\[\\begin{aligned}\n\\hat{V}(Y\\mid \\vec{X},= 1,M=1) &= \\text{exp}\\left[\\hat\\lambda + \\hat\\delta  + \\vec{X}'\\left(\\hat{\\vec\\nu} + \\hat{\\vec\\eta}\\right)\\right] \\\\\n\\hat{V}(Y\\mid \\vec{X},= 0,M=1) &= \\text{exp}\\left[\\hat\\lambda + \\vec{X}'\\hat{\\vec\\nu}\\right] \\\\\n\\end{aligned}\\]","code":""},{"path":"relaxing-homoskedasticity.html","id":"in-code","chapter":"4 Relaxing homoskedasticity","heading":"4.3 In code","text":"can relax homskedasticity assumption homoskedastic = FALSE argument. estimates variance function regression () using predictor model formula formula_y.data setup , can estimate models.","code":"\nlibrary(tidyverse)\nlibrary(pstratreg)\ndata <- pstratreg_sim(n = 100)\nresult <- pstratreg(\n  formula_y = formula(y ~ x*a),\n  formula_m = formula(m ~ x*a),\n  data = data,\n  treatment_name = \"a\",\n  homoskedastic = FALSE\n)#> Effect on mediator, where mediator indicates whether outcome will be valid\n#> # A tibble: 1 × 3\n#>   mhat1 mhat0 effect_m\n#>   <dbl> <dbl>    <dbl>\n#> 1 0.842 0.691    0.150\n#> \n#> Effect on outcome among those who would have a valid outcome regardless of treatment\n#> # A tibble: 1 × 3\n#>   effect_y_lower effect_y_naive effect_y_upper\n#>            <dbl>          <dbl>          <dbl>\n#> 1          0.654           1.00           1.35"},{"path":"standard-errors.html","id":"standard-errors","chapter":"5 Standard errors","heading":"5 Standard errors","text":"Appropriate standard errors depend application-specific knowledge data generated. example, appropriate standard errors sampling variability simple random samples, sampling variability complex samples, finite-sample inference variation random treatment assignment.particular case simple random samples, package supports standard error estimation nonparametric bootstrap 95% confidence intervals Normal approximation using estimated standard error.first set environmentand simulate dataand produce point estimates call pstratreg.estimate standard errors confidence intervals, hand output call pstratreg pstratreg_se function, optionally specifying number r bootstrap samples.output call pstratreg_se data frame containing estimates inferential quantities.See end page glossary estimand terms output.","code":"\nlibrary(tidyverse)\nlibrary(pstratreg)\ndata <- pstratreg_sim(n = 100)\npstratreg.out <- pstratreg(\n  formula_y = formula(y ~ x*a),\n  formula_m = formula(m ~ x*a),\n  data = data,\n  treatment_name = \"a\"\n)\nresult_with_se <- pstratreg_se(pstratreg.out, r = 100)#> # A tibble: 6 × 5\n#>   estimand       estimate     se  ci.min ci.max\n#>   <chr>             <dbl>  <dbl>   <dbl>  <dbl>\n#> 1 effect_m          0.154 0.0875 -0.0178  0.325\n#> 2 mhat0             0.717 0.0548  0.610   0.825\n#> 3 mhat0_trunc       0.717 0.0548  0.610   0.825\n#> 4 mhat1             0.871 0.0750  0.724   1.02 \n#> 5 mhat1_trunc       0.871 0.0750  0.724   1.02 \n#> 6 effect_y_lower    0.338 0.256  -0.163   0.840"},{"path":"standard-errors.html","id":"visualize-the-result","chapter":"5 Standard errors","heading":"5.1 Visualize the result","text":"One way use output create visualizations using ggplot. example, code visualizes bounded effects outcome.","code":"\nresult_with_se %>%\n  filter(estimand %in% c(\"effect_y_lower\",\"effect_y_naive\",\"effect_y_upper\")) %>%\n  mutate(estimand_label = case_when(\n    estimand == \"effect_y_lower\" ~ \"(1)\\nLower Bound\",\n    estimand == \"effect_y_naive\" ~ \"(2)\\nEstimate if No\\nPost-Treatment\\nSelection\",\n    estimand == \"effect_y_upper\" ~ \"(3)\\nUpper Bound\"\n  )) %>%\n  ggplot(aes(x = estimand_label, y = estimate,\n             ymin = ci.min, ymax = ci.max)) +\n  geom_point() +\n  geom_errorbar() +\n  ylab(\"Average Causal Effect on Outcome\\nAmong the Always-Valid\") +\n  scale_x_discrete(name = \"Bound Estimates\")"},{"path":"standard-errors.html","id":"glossary-of-estimands-that-result","chapter":"5 Standard errors","heading":"5.2 Glossary of estimands that result","text":"","code":""}]
